buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://repo.spring.io/plugins-release'
        }

        // this two repository must not be here since it was already
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.2.1'
        classpath 'org.postgresql:postgresql:9.4.1211'
        classpath files("$rootDir/libs/ojdbc6-11.2.0.4.jar")
    }
}

configurations {
    optional
    compile.extendsFrom optional
}

apply plugin: 'org.liquibase.gradle'
apply from: 'liquibase.gradle'
apply from: file('docker.gradle')

bootRun {
    systemProperties = System.properties
}

dependencies {
    compile 'io.undertow:undertow-core'
    compile 'io.undertow:undertow-servlet'
    compile 'io.undertow:undertow-websockets-jsr'

    compile 'org.apache.poi:poi'
    compile 'org.apache.poi:poi-ooxml'
    compile 'net.sf.supercsv:super-csv-java8'

    compile 'org.projectlombok:lombok'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-amqp'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'

    compile 'org.springframework.data:spring-data-commons'

    optional 'org.springframework.boot:spring-boot-configuration-processor'

    compile 'org.springframework.cloud:spring-cloud-starter-eureka'
    compile 'org.springframework.cloud:spring-cloud-starter-config'

    compile 'org.springframework.security.oauth:spring-security-oauth2'

    runtime 'com.zaxxer:HikariCP'
    runtime 'org.postgresql:postgresql'
    runtime files("$rootDir/libs/ojdbc6-11.2.0.4.jar")

    compile 'commons-io:commons-io'
    compile 'org.apache.commons:commons-lang3'

    runtime 'de.appelgriepsch.logback:logback-gelf-appender'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

liquibase {
    activities {
        validate {
            changeLogFile "${project.file('src/main')}/liquibase/changelog-main.groovy"
            url "${dbUrl}"
            username "${dbUser}"
            password "${dbPassword}"
        }
    }
}
