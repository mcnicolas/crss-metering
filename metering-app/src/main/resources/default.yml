spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/crss_metering
    username: crss_metering
    password: crss_metering
    driverClassName: org.postgresql.Driver
    hikari:
      connectionTimeout: 10000
      maximumPoolSize: 20
  rabbitmq:
#    TODO: Need to finalize username/password
    username: guest
    password: guest

server:
  port: 8084
  undertow:
    accesslog:
      dir: target
      enabled: true
      pattern: combined
  compression:
    enabled: true
    min-response-size: 1

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
      #    healthcheck:
      #      enabled: true
#    lease:
#      duration: 5
#  instance:
#    leaseRenewalIntervalInSeconds: 1
#    leaseExpirationDurationInSeconds: 2

security:
  oauth2:
    client:
      accessTokenUri: http://localhost:8082/oauth/access_token
      userAuthorizationUri: http://localhost:8082/oauth/authorize
      clientId: crss
      clientSecret: crsssecret
      authorized-grant-types: authorization_code,refresh_token,password
      scope: openid
      access-token-validity-seconds: 3600
    resource:
      userInfoUri: http://localhost:8082/user

logging:
  level:
    com.pemc: DEBUG
    com.netflix: WARN
    org.springframework.cloud: WARN
    org.hibernate.SQL: DEBUG
    org.springframework.amqp.rabbit.listener: WARN

mq:
  manifest:
    header: >
      INSERT INTO TXN_MQ_MANIFEST_HEADER (header_id, transaction_id, file_count, category,
      upload_by, upload_datetime) VALUES (NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?, ?)
    trailer: >
      UPDATE TXN_MQ_MANIFEST_HEADER SET tail_received = 'Y' WHERE transaction_id = ?
    file: >
      INSERT INTO TXN_MQ_MANIFEST_FILE (file_id, header_id, transaction_id, filename, filetype,
      filesize, checksum) VALUES (NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?, ?, ?)
  meter:
    daily: >
      INSERT INTO TXN_METER_DATA_DAILY VALUES(
      NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    monthly: >
      INSERT INTO TXN_METER_DATA_MONTHLY VALUES(
      NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
      ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
bcq:
  manifest: >
    INSERT INTO TXN_BCQ_UPLOAD_FILE (FILE_ID, TRANSACTION_ID, FILE_NAME, FILE_SIZE, SUBMITTED_DATE)
    VALUES (NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?)
  header:
    insert: >
      INSERT INTO TXN_BCQ_HEADER (BCQ_HEADER_ID, FILE_ID, SELLING_MTN, BUYING_PARTICIPANT, SELLING_PARTICIPANT_NAME,
      SELLING_PARTICIPANT_SHORT_NAME, STATUS, DECLARATION_DATE) VALUES (NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?, ?, ?, ?)
    update: >
      UPDATE TXN_BCQ_HEADER SET FILE_ID = ? WHERE SELLING_MTN = ? AND BUYING_PARTICIPANT = ? AND DECLARATION_DATE = ?
    count: >
      SELECT COUNT(*) FROM TXN_BCQ_HEADER WHERE SELLING_MTN = ? AND BUYING_PARTICIPANT = ? AND DECLARATION_DATE = ?
  data:
    insert: >
      INSERT INTO TXN_BCQ_DATA (BCQ_DATA_ID, BCQ_HEADER_ID, REFERENCE_MTN, START_TIME, END_TIME, BCQ)
      VALUES (NEXTVAL('HIBERNATE_SEQUENCE'), ?, ?, ?, ?, ?)
    update: >
      UPDATE TXN_BCQ_DATA SET REFERENCE_MTN = ?, BCQ = ? WHERE END_TIME = ? AND BCQ_HEADER_ID = ?
  display:
    data: >
      SELECT SELLING_PARTICIPANT_NAME, SELLING_PARTICIPANT_SHORT_NAME, SELLING_MTN,
      BUYING_PARTICIPANT, TRADING_DATE, TRANSACTION_ID, SUBMITTED_DATE, STATUS
      FROM TXN_BCQ_HEADER A INNER JOIN TXN_BCQ_UPLOAD_FILE B ON A.FILE_ID = B.FILE_ID
      WHERE A.TRADING_DATE = ?
    count: >
      SELECT COUNT(*) FROM TXN_BCQ_HEADER A INNER JOIN TXN_BCQ_UPLOAD_FILE B ON A.FILE_ID = B.FILE_ID
      WHERE A.TRADING_DATE = ?
    wrapper: >
      {SELECT_QUERY} LIMIT {PAGE_NO} * {PAGE_SIZE} OFFSET {PAGE_SIZE}