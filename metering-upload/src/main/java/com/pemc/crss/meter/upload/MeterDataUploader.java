package com.pemc.crss.meter.upload;

import lombok.extern.slf4j.Slf4j;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.util.List;
import java.util.UUID;
import javax.swing.BorderFactory;

@Slf4j
public class MeterDataUploader extends JFrame {

    private String token;
    private String username;
    private String userType;

    public MeterDataUploader() {
        initComponents();
    }

    public void configureComponents() {
//        centerOnScreen();

        headerPanel.configureComponents(this);
        tablePanel.configureComponents(this);
    }

    public void configureServices() {
    }

    public void updateTableDisplay(List<FileBean> selectedFiles) {
        tablePanel.updateTableDisplay(selectedFiles);
    }

    // TODO:
    // 1. Handle disabling of upload button when not logged in
    // 2. Display progress bar
    public void uploadData(String category, int mspID) {
        String transactionID = UUID.randomUUID().toString();

        List<FileBean> selectedFiles = tablePanel.getSelectedFiles();

        if (token != null) {
            RestUtil.sendHeader(transactionID, username, selectedFiles.size(), category, mspID, token);
        }

        for (FileBean selectedFile : selectedFiles) {
            RestUtil.sendFile(transactionID, selectedFile, category, token);

            log.debug("Uploading file:{}", selectedFile.getPath().getFileName().toString());
        }

        RestUtil.sendTrailer(transactionID, token);

        // TODO: Upload files
        // 0. Generate uuid
        // 1. send header
        // 2. loop through the files and send each file individually
        // 3. send trailer
    }

    public void login(String username, String password) {
        try {
            token = RestUtil.login(username, password);
            userType = RestUtil.getUserType(token);
            this.username = username;

            log.debug("Logged in with token: {}", token);
            log.debug("User type: {}", userType);
        } catch (LoginException e) {
            log.error(e.getMessage(), e);

            // TODO: Handle error
        }
    }

    private void centerOnScreen() {
        GraphicsEnvironment graphicsEnvironment = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice[] graphicsDevices = graphicsEnvironment.getScreenDevices();
        int height = graphicsDevices[0].getDisplayMode().getHeight();
        int width = graphicsDevices[0].getDisplayMode().getWidth();
        Dimension screen = new Dimension(width, height);

        Dimension size = new Dimension(this.getWidth(), this.getHeight());

        setSize(size);

        setLocation((screen.width - size.width) / 2, (screen.height - size.height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        headerPanel = new HeaderPanel();
        tablePanel = new TablePanel();
        statusBarPanel = new JPanel();
        blankPanel = new JPanel();
        statusPanel = new JPanel();
        leftStatusPanel = new JPanel();
        jLabel1 = new JLabel();
        jLabel4 = new JLabel();
        centerStatusPanel = new JPanel();
        jLabel12 = new JLabel();
        rightStatusPanel = new JPanel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        uploadProgressPanel = new JPanel();
        leftUploadPanel = new JPanel();
        jLabel7 = new JLabel();
        jLabel6 = new JLabel();
        centerUploadPanel = new JPanel();
        jLabel5 = new JLabel();
        jProgressBar1 = new JProgressBar();
        rightUploadPanel = new JPanel();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();
        jLabel10 = new JLabel();
        jLabel11 = new JLabel();
        initializeProgressPanel = new JPanel();
        lblUploadStatus = new JLabel();
        uploadProgress = new JProgressBar();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Meter Quantity Uploader");
        setMinimumSize(new Dimension(700, 550));
        setPreferredSize(new Dimension(700, 550));
        setResizable(false);
        getContentPane().add(headerPanel, BorderLayout.NORTH);

        tablePanel.setBorder(BorderFactory.createEmptyBorder(3, 3, 0, 3));
        getContentPane().add(tablePanel, BorderLayout.CENTER);

        statusBarPanel.setLayout(new CardLayout());

        blankPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 3, 3, 3), new SoftBevelBorder(BevelBorder.LOWERED)));
        statusBarPanel.add(blankPanel, "blank");

        statusPanel.setLayout(new BorderLayout());

        leftStatusPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 3, 3, 1), new SoftBevelBorder(BevelBorder.LOWERED)));

        jLabel1.setText("Total Size:");
        leftStatusPanel.add(jLabel1);

        jLabel4.setText("10MB");
        leftStatusPanel.add(jLabel4);

        statusPanel.add(leftStatusPanel, BorderLayout.WEST);

        centerStatusPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 1, 3, 1), new SoftBevelBorder(BevelBorder.LOWERED)));

        jLabel12.setText("jLabel12");
        centerStatusPanel.add(jLabel12);

        statusPanel.add(centerStatusPanel, BorderLayout.CENTER);

        rightStatusPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 1, 3, 3), new SoftBevelBorder(BevelBorder.LOWERED)));

        jLabel2.setText("File Count:");
        rightStatusPanel.add(jLabel2);

        jLabel3.setText("100");
        rightStatusPanel.add(jLabel3);

        statusPanel.add(rightStatusPanel, BorderLayout.EAST);

        statusBarPanel.add(statusPanel, "Status");

        uploadProgressPanel.setLayout(new BorderLayout());

        leftUploadPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 3, 3, 1), new SoftBevelBorder(BevelBorder.LOWERED)));

        jLabel7.setText("Time:");
        leftUploadPanel.add(jLabel7);

        jLabel6.setText("5:47");
        leftUploadPanel.add(jLabel6);

        uploadProgressPanel.add(leftUploadPanel, BorderLayout.WEST);

        centerUploadPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 1, 3, 1), new SoftBevelBorder(BevelBorder.LOWERED)));

        jLabel5.setText("Uploading: asdf.xls");
        centerUploadPanel.add(jLabel5);
        centerUploadPanel.add(jProgressBar1);

        uploadProgressPanel.add(centerUploadPanel, BorderLayout.CENTER);

        rightUploadPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 1, 3, 3), new SoftBevelBorder(BevelBorder.LOWERED)));

        jLabel8.setText("Upload Speed:");
        rightUploadPanel.add(jLabel8);

        jLabel9.setText("750 KB/s");
        rightUploadPanel.add(jLabel9);

        jLabel10.setText("Time Remaining:");
        rightUploadPanel.add(jLabel10);

        jLabel11.setText("5:34");
        rightUploadPanel.add(jLabel11);

        uploadProgressPanel.add(rightUploadPanel, BorderLayout.EAST);

        statusBarPanel.add(uploadProgressPanel, "Upload");

        initializeProgressPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createEmptyBorder(1, 3, 1, 3), new SoftBevelBorder(BevelBorder.LOWERED)));
        initializeProgressPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));

        lblUploadStatus.setText("Loading MSP Data");
        initializeProgressPanel.add(lblUploadStatus);

        uploadProgress.setPreferredSize(new Dimension(300, 20));
        initializeProgressPanel.add(uploadProgress);

        statusBarPanel.add(initializeProgressPanel, "Initialize");

        getContentPane().add(statusBarPanel, BorderLayout.SOUTH);

        setSize(new Dimension(960, 505));
        setLocationRelativeTo(null);
    }//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel blankPanel;
    private JPanel centerStatusPanel;
    private JPanel centerUploadPanel;
    private HeaderPanel headerPanel;
    private JPanel initializeProgressPanel;
    private JLabel jLabel1;
    private JLabel jLabel10;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JProgressBar jProgressBar1;
    private JLabel lblUploadStatus;
    private JPanel leftStatusPanel;
    private JPanel leftUploadPanel;
    private JPanel rightStatusPanel;
    private JPanel rightUploadPanel;
    private JPanel statusBarPanel;
    private JPanel statusPanel;
    private TablePanel tablePanel;
    private JProgressBar uploadProgress;
    private JPanel uploadProgressPanel;
    // End of variables declaration//GEN-END:variables

}
