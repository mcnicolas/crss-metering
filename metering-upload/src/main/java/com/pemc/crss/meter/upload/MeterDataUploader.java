package com.pemc.crss.meter.upload;

import lombok.extern.slf4j.Slf4j;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.util.List;
import java.util.UUID;

@Slf4j
public class MeterDataUploader extends JFrame {

    private String token;
    private String username;
    private String userType;

    public MeterDataUploader() {
        initComponents();
    }

    public void configureComponents() {
//        centerOnScreen();

        headerPanel.configureComponents(this);
        tablePanel.configureComponents(this);
    }

    public void configureServices() {
    }

    public void updateTableDisplay(List<FileBean> selectedFiles) {
        tablePanel.updateTableDisplay(selectedFiles);
    }

    // TODO:
    // 1. Handle disabling of upload button when not logged in
    // 2. Display progress bar
    public void uploadData(String category, int mspID) {
        String transactionID = UUID.randomUUID().toString();

        List<FileBean> selectedFiles = tablePanel.getSelectedFiles();

        if (token != null) {
            RestUtil.sendHeader(transactionID, username, selectedFiles.size(), category, mspID, token);
        }

        for (FileBean selectedFile : selectedFiles) {
            RestUtil.sendFile(transactionID, selectedFile, category, token);

            log.debug("Uploading file:{}", selectedFile.getPath().getFileName().toString());
        }

        RestUtil.sendTrailer(transactionID, token);

        // TODO: Upload files
        // 0. Generate uuid
        // 1. send header
        // 2. loop through the files and send each file individually
        // 3. send trailer
    }

    public void login(String username, String password) {
        try {
            token = RestUtil.login(username, password);
            userType = RestUtil.getUserType(token);
            this.username = username;

            log.debug("Logged in with token: {}", token);
            log.debug("User type: {}", userType);
        } catch (LoginException e) {
            log.error(e.getMessage(), e);

            // TODO: Handle error
        }
    }

    private void centerOnScreen() {
        GraphicsEnvironment graphicsEnvironment = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice[] graphicsDevices = graphicsEnvironment.getScreenDevices();
        int height = graphicsDevices[0].getDisplayMode().getHeight();
        int width = graphicsDevices[0].getDisplayMode().getWidth();
        Dimension screen = new Dimension(width, height);

        Dimension size = new Dimension(this.getWidth(), this.getHeight());

        setSize(size);

        setLocation((screen.width - size.width) / 2, (screen.height - size.height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        headerPanel = new HeaderPanel();
        tablePanel = new TablePanel();
        statusBarPanel = new JPanel();
        uploadStatusPanel = new JPanel();
        lblUploadStatus = new JLabel();
        uploadProgress = new JProgressBar();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Meter Quantity Uploader");
        setMinimumSize(new Dimension(700, 550));
        setPreferredSize(new Dimension(700, 550));
        setResizable(false);
        getContentPane().add(headerPanel, BorderLayout.NORTH);
        getContentPane().add(tablePanel, BorderLayout.CENTER);

        statusBarPanel.setLayout(new BorderLayout());

        uploadStatusPanel.setBorder(new SoftBevelBorder(BevelBorder.LOWERED));
        uploadStatusPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));

        lblUploadStatus.setText("Uploading");
        uploadStatusPanel.add(lblUploadStatus);

        uploadProgress.setPreferredSize(new Dimension(300, 20));
        uploadStatusPanel.add(uploadProgress);

        statusBarPanel.add(uploadStatusPanel, BorderLayout.SOUTH);

        getContentPane().add(statusBarPanel, BorderLayout.SOUTH);

        setSize(new Dimension(960, 505));
        setLocationRelativeTo(null);
    }//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private HeaderPanel headerPanel;
    private JLabel lblUploadStatus;
    private JPanel statusBarPanel;
    private TablePanel tablePanel;
    private JProgressBar uploadProgress;
    private JPanel uploadStatusPanel;
    // End of variables declaration//GEN-END:variables

}
